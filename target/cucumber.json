[{"line":1,"elements":[{"start_timestamp":"2025-05-17T11:18:10.377Z","line":3,"name":"Customer creates a custom meal request with available ingredients","description":"","id":"order-and-menu-customization;customer-creates-a-custom-meal-request-with-available-ingredients","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":10000000,"status":"passed"},"line":4,"name":"a customer with dietary preference \"Vegan\" and allergy \"Peanut\"","match":{"arguments":[{"val":"\"Vegan\"","offset":35},{"val":"\"Peanut\"","offset":55}],"location":"FeatureTest.CustomerOrder.aCustomerWithDietaryPreferenceAndAllergy(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":10002300,"status":"passed"},"line":5,"name":"the following ingredients are available:","match":{"location":"FeatureTest.CustomerOrder.theFollowingIngredientsAreAvailable(io.cucumber.datatable.DataTable)"},"rows":[{"cells":["name","available"]},{"cells":["Lettuce","true"]},{"cells":["Tomato","true"]},{"cells":["Tofu","true"]},{"cells":["Olive Oil","true"]}],"keyword":"And "},{"result":{"duration":9998700,"status":"passed"},"line":11,"name":"the customer selects the following ingredients for their custom meal:","match":{"location":"FeatureTest.CustomerOrder.theCustomerSelectsTheFollowingIngredientsForTheirCustomMeal(io.cucumber.datatable.DataTable)"},"rows":[{"cells":["ingredient"]},{"cells":["Lettuce"]},{"cells":["Tomato"]},{"cells":["Tofu"]}],"keyword":"When "},{"result":{"duration":10000400,"status":"passed"},"line":16,"name":"the system should confirm the custom meal is created successfully","match":{"location":"FeatureTest.CustomerOrder.theSystemShouldConfirmTheCustomMealIsCreatedSuccessfully()"},"keyword":"Then "},{"result":{"error_message":"org.junit.ComparisonFailure: expected:<Meal [should be ]added to order succe...> but was:<Meal []added to order succe...>\r\n\tat org.junit.Assert.assertEquals(Assert.java:117)\r\n\tat org.junit.Assert.assertEquals(Assert.java:146)\r\n\tat FeatureTest.CustomerOrder.theCustomerShouldBeAbleToAddTheMealToTheirOrder(CustomerOrder.java:73)\r\n\tat ✽.the customer should be able to add the meal to their order(file:///C:/Users/Nadia1/Downloads/Cook1/Cook1/Cook/src/test/resources/features/CustomerOrder.feature:17)\r\n","status":"failed"},"line":17,"name":"the customer should be able to add the meal to their order","match":{"location":"FeatureTest.CustomerOrder.theCustomerShouldBeAbleToAddTheMealToTheirOrder()"},"keyword":"And "}]},{"start_timestamp":"2025-05-17T11:18:10.628Z","line":19,"name":"Customer tries to create a custom meal with incompatible ingredients","description":"","id":"order-and-menu-customization;customer-tries-to-create-a-custom-meal-with-incompatible-ingredients","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":20,"name":"a customer with dietary preference \"Vegan\" and allergy \"Peanut\"","match":{"arguments":[{"val":"\"Vegan\"","offset":35},{"val":"\"Peanut\"","offset":55}],"location":"FeatureTest.CustomerOrder.aCustomerWithDietaryPreferenceAndAllergy(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"status":"passed"},"line":21,"name":"the following ingredients are available:","match":{"location":"FeatureTest.CustomerOrder.theFollowingIngredientsAreAvailable(io.cucumber.datatable.DataTable)"},"rows":[{"cells":["name","available"]},{"cells":["Lettuce","true"]},{"cells":["Tomato","true"]},{"cells":["Tofu","true"]},{"cells":["Peanut Butter","true"]}],"keyword":"And "},{"result":{"status":"passed"},"line":27,"name":"the customer selects the following ingredients for their custom meal:","match":{"location":"FeatureTest.CustomerOrder.theCustomerSelectsTheFollowingIngredientsForTheirCustomMeal(io.cucumber.datatable.DataTable)"},"rows":[{"cells":["ingredient"]},{"cells":["Lettuce"]},{"cells":["Tomato"]},{"cells":["Peanut Butter"]}],"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: Expected alert for incompatible ingredient: Peanut Butter is not compatible with your dietary preference.\r\n\tat org.junit.Assert.fail(Assert.java:89)\r\n\tat org.junit.Assert.assertTrue(Assert.java:42)\r\n\tat FeatureTest.CustomerOrder.theSystemShouldAlertTheCustomerThatIsNotCompatibleWithTheirDietaryPreference(CustomerOrder.java:79)\r\n\tat ✽.the system should alert the customer that \"Peanut Butter\" is not compatible with their dietary preference(file:///C:/Users/Nadia1/Downloads/Cook1/Cook1/Cook/src/test/resources/features/CustomerOrder.feature:32)\r\n","status":"failed"},"line":32,"name":"the system should alert the customer that \"Peanut Butter\" is not compatible with their dietary preference","match":{"arguments":[{"val":"\"Peanut Butter\"","offset":42}],"location":"FeatureTest.CustomerOrder.theSystemShouldAlertTheCustomerThatIsNotCompatibleWithTheirDietaryPreference(java.lang.String)"},"keyword":"Then "},{"result":{"status":"skipped"},"line":33,"name":"the customer should be prompted to select a different ingredient","match":{"location":"FeatureTest.CustomerOrder.theCustomerShouldBePromptedToSelectADifferentIngredient()"},"keyword":"And "}]},{"start_timestamp":"2025-05-17T11:18:10.698Z","line":35,"name":"Customer tries to create a custom meal with unavailable ingredients","description":"","id":"order-and-menu-customization;customer-tries-to-create-a-custom-meal-with-unavailable-ingredients","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":36,"name":"a customer with dietary preference \"Vegan\" and allergy \"Peanut\"","match":{"arguments":[{"val":"\"Vegan\"","offset":35},{"val":"\"Peanut\"","offset":55}],"location":"FeatureTest.CustomerOrder.aCustomerWithDietaryPreferenceAndAllergy(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"status":"passed"},"line":37,"name":"the following ingredients are available:","match":{"location":"FeatureTest.CustomerOrder.theFollowingIngredientsAreAvailable(io.cucumber.datatable.DataTable)"},"rows":[{"cells":["name","available"]},{"cells":["Lettuce","true"]},{"cells":["Tomato","true"]},{"cells":["Tofu","true"]}],"keyword":"And "},{"result":{"status":"passed"},"line":42,"name":"the customer selects the following ingredients for their custom meal:","match":{"location":"FeatureTest.CustomerOrder.theCustomerSelectsTheFollowingIngredientsForTheirCustomMeal(io.cucumber.datatable.DataTable)"},"rows":[{"cells":["ingredient"]},{"cells":["Lettuce"]},{"cells":["Tomato"]},{"cells":["Chicken"]}],"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: Expected notification for unavailable ingredient: Chicken is currently unavailable.\r\n\tat org.junit.Assert.fail(Assert.java:89)\r\n\tat org.junit.Assert.assertTrue(Assert.java:42)\r\n\tat FeatureTest.CustomerOrder.theSystemShouldNotifyTheCustomerThatIsCurrentlyUnavailable(CustomerOrder.java:91)\r\n\tat ✽.the system should notify the customer that \"Chicken\" is currently unavailable(file:///C:/Users/Nadia1/Downloads/Cook1/Cook1/Cook/src/test/resources/features/CustomerOrder.feature:47)\r\n","status":"failed"},"line":47,"name":"the system should notify the customer that \"Chicken\" is currently unavailable","match":{"arguments":[{"val":"\"Chicken\"","offset":43}],"location":"FeatureTest.CustomerOrder.theSystemShouldNotifyTheCustomerThatIsCurrentlyUnavailable(java.lang.String)"},"keyword":"Then "},{"result":{"duration":9999200,"status":"skipped"},"line":48,"name":"the customer should be asked to choose a different ingredient","match":{"location":"FeatureTest.CustomerOrder.theCustomerShouldBeAskedToChooseADifferentIngredient()"},"keyword":"And "}]}],"name":"Order and Menu Customization","description":"","id":"order-and-menu-customization","keyword":"Feature","uri":"file:src/test/resources/features/CustomerOrder.feature","tags":[]},{"line":1,"elements":[{"start_timestamp":"2025-05-17T11:18:10.838Z","line":3,"name":"Generating an invoice for a single purchase","description":"","id":"customer-invoice-management-as-a-restaurant-system-i-want-to-generate-and-manage-customer-invoices-so-that-customers-receive-accurate-billing-details;generating-an-invoice-for-a-single-purchase","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"undefined"},"line":4,"name":"a customer has completed a purchase","match":{},"keyword":"Given "},{"result":{"status":"skipped"},"line":5,"name":"the system processes the purchase","match":{},"keyword":"When "},{"result":{"status":"skipped"},"line":6,"name":"an invoice is generated with purchase details","match":{},"keyword":"Then "},{"result":{"duration":9998800,"status":"skipped"},"line":7,"name":"the invoice is sent to the customer's email","match":{},"keyword":"And "}]},{"start_timestamp":"2025-05-17T11:18:10.898Z","line":9,"name":"Generating an invoice for multiple items","description":"","id":"customer-invoice-management-as-a-restaurant-system-i-want-to-generate-and-manage-customer-invoices-so-that-customers-receive-accurate-billing-details;generating-an-invoice-for-multiple-items","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"undefined"},"line":10,"name":"a customer has purchased multiple items","match":{},"keyword":"Given "},{"result":{"status":"skipped"},"line":11,"name":"the system processes the purchase","match":{},"keyword":"When "},{"result":{"status":"skipped"},"line":12,"name":"an invoice is generated listing all items with their prices","match":{},"keyword":"Then "},{"result":{"status":"skipped"},"line":13,"name":"the invoice is sent to the customer's email","match":{},"keyword":"And "}]},{"start_timestamp":"2025-05-17T11:18:10.958Z","line":15,"name":"Regenerating a lost invoice","description":"","id":"customer-invoice-management-as-a-restaurant-system-i-want-to-generate-and-manage-customer-invoices-so-that-customers-receive-accurate-billing-details;regenerating-a-lost-invoice","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"undefined"},"line":16,"name":"a customer has lost their original invoice","match":{},"keyword":"Given "},{"result":{"status":"skipped"},"line":17,"name":"the customer requests a new invoice","match":{},"keyword":"When "},{"result":{"status":"skipped"},"line":18,"name":"the system regenerates the invoice with the same details","match":{},"keyword":"Then "},{"result":{"status":"skipped"},"line":19,"name":"the invoice is sent to the customer's email","match":{},"keyword":"And "}]}],"name":"Customer Invoice Management As a restaurant system I want to generate and manage customer invoices So that customers receive accurate billing details","description":"","id":"customer-invoice-management-as-a-restaurant-system-i-want-to-generate-and-manage-customer-invoices-so-that-customers-receive-accurate-billing-details","keyword":"Feature","uri":"file:src/test/resources/features/Customer_Invoice_Management.feature","tags":[]},{"line":1,"elements":[{"start_timestamp":"2025-05-17T11:18:11.088Z","line":4,"name":"Administrator generates a financial report for multiple purchases","description":"","id":"generate-financial-reports;administrator-generates-a-financial-report-for-multiple-purchases","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":5,"name":"multiple customers have completed purchases","match":{"location":"FeatureTest.GenerateInvoicesAndTrackFinancialReportsTest.multiple_customers_have_completed_purchases()"},"keyword":"Given "},{"result":{"duration":10000500,"status":"passed"},"line":6,"name":"the administrator requests a financial report","match":{"location":"FeatureTest.GenerateInvoicesAndTrackFinancialReportsTest.the_administrator_requests_a_financial_report()"},"keyword":"When "},{"result":{"status":"passed"},"line":7,"name":"a financial report is generated with total revenue and invoice details","match":{"location":"FeatureTest.GenerateInvoicesAndTrackFinancialReportsTest.a_financial_report_is_generated_with_total_revenue_and_invoice_details()"},"keyword":"Then "}]},{"start_timestamp":"2025-05-17T11:18:11.128Z","line":9,"name":"Administrator generates a financial report with no purchases","description":"","id":"generate-financial-reports;administrator-generates-a-financial-report-with-no-purchases","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":10,"name":"no customers have completed purchases","match":{"location":"FeatureTest.GenerateInvoicesAndTrackFinancialReportsTest.no_customers_have_completed_purchases()"},"keyword":"Given "},{"result":{"status":"passed"},"line":11,"name":"the administrator requests a financial report","match":{"location":"FeatureTest.GenerateInvoicesAndTrackFinancialReportsTest.the_administrator_requests_a_financial_report()"},"keyword":"When "},{"result":{"status":"passed"},"line":12,"name":"a financial report is generated with zero revenue and no invoices","match":{"location":"FeatureTest.GenerateInvoicesAndTrackFinancialReportsTest.a_financial_report_is_generated_with_zero_revenue_and_no_invoices()"},"keyword":"Then "}]}],"name":"Generate Financial Reports","description":"  As a system administrator, I want to generate financial reports so that I can analyze revenue and track business performance.","id":"generate-financial-reports","keyword":"Feature","uri":"file:src/test/resources/features/GenerateInvoicesAndTrackFinancialReportsTest.feature","tags":[]},{"line":1,"elements":[{"start_timestamp":"2025-05-17T11:18:11.188Z","line":4,"name":"Track available ingredients and suggest restocking","description":"","id":"inventory-and-supplier-management;track-available-ingredients-and-suggest-restocking","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"undefined"},"line":5,"name":"the kitchen manager has access to the inventory system","match":{},"keyword":"Given "},{"result":{"status":"skipped"},"line":6,"name":"the following ingredients are available in the system:","match":{},"rows":[{"cells":["Ingredient","Quantity"]},{"cells":["Tomatoes","50"]},{"cells":["Onions","10"]},{"cells":["Garlic","5"]}],"keyword":"And "},{"result":{"status":"skipped"},"line":11,"name":"the kitchen manager checks the inventory levels","match":{},"keyword":"When "},{"result":{"status":"skipped"},"line":12,"name":"the system should display the current stock levels of all ingredients","match":{},"keyword":"Then "},{"result":{"status":"skipped"},"line":13,"name":"the system should suggest restocking for ingredients with low stock","match":{},"keyword":"And "},{"result":{"status":"skipped"},"line":14,"name":"the system should suggest restocking for \"Onions\" and \"Garlic\"","match":{},"keyword":"And "}]},{"start_timestamp":"2025-05-17T11:18:11.258Z","line":17,"name":"Prevent ingredient shortages by tracking stock levels","description":"","id":"inventory-and-supplier-management;prevent-ingredient-shortages-by-tracking-stock-levels","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"undefined"},"line":18,"name":"the kitchen manager has access to the inventory system","match":{},"keyword":"Given "},{"result":{"status":"skipped"},"line":19,"name":"the following ingredients are available in the system:","match":{},"rows":[{"cells":["Ingredient","Quantity"]},{"cells":["Tomatoes","100"]},{"cells":["Onions","15"]},{"cells":["Garlic","2"]}],"keyword":"And "},{"result":{"status":"skipped"},"line":24,"name":"the kitchen manager checks the inventory levels","match":{},"keyword":"When "},{"result":{"status":"skipped"},"line":25,"name":"the system should display the current stock levels of all ingredients","match":{},"keyword":"Then "},{"result":{"status":"skipped"},"line":26,"name":"the system should warn the kitchen manager about low stock for \"Garlic\"","match":{},"keyword":"And "},{"result":{"status":"skipped"},"line":27,"name":"the system should not warn about \"Tomatoes\" or \"Onions\"","match":{},"keyword":"And "}]},{"start_timestamp":"2025-05-17T11:18:11.318Z","line":30,"name":"Automatic restocking suggestion when stock is low","description":"","id":"inventory-and-supplier-management;automatic-restocking-suggestion-when-stock-is-low","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"undefined"},"line":31,"name":"the kitchen manager has access to the inventory system","match":{},"keyword":"Given "},{"result":{"status":"skipped"},"line":32,"name":"the following ingredients are available in the system:","match":{},"rows":[{"cells":["Ingredient","Quantity"]},{"cells":["Tomatoes","25"]},{"cells":["Onions","5"]},{"cells":["Garlic","1"]}],"keyword":"And "},{"result":{"status":"skipped"},"line":37,"name":"the kitchen manager checks the inventory levels","match":{},"keyword":"When "},{"result":{"status":"skipped"},"line":38,"name":"the system should automatically suggest restocking for \"Onions\" and \"Garlic\"","match":{},"keyword":"Then "},{"result":{"status":"skipped"},"line":39,"name":"the system should suggest a reorder for \"Tomatoes\"","match":{},"keyword":"And "}]}],"name":"Inventory and Supplier Management","description":"","id":"inventory-and-supplier-management","keyword":"Feature","uri":"file:src/test/resources/features/InventorySupplier.feature","tags":[]},{"line":1,"elements":[{"start_timestamp":"2025-05-17T11:18:11.368Z","line":6,"name":"Successful login with valid credentials","description":"","id":"user-login-and-authentication;successful-login-with-valid-credentials","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":7,"name":"a user with username \"john_doe\" and password \"Pass1234\" exists with role \"Customer\"","match":{"arguments":[{"val":"\"john_doe\"","offset":21},{"val":"\"Pass1234\"","offset":45},{"val":"\"Customer\"","offset":73}],"location":"FeatureTest.LoginTest.a_user_with_username_and_password_exists_with_role(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"status":"passed"},"line":8,"name":"the user attempts to log in with username \"john_doe\" and password \"Pass1234\"","match":{"arguments":[{"val":"\"john_doe\"","offset":42},{"val":"\"Pass1234\"","offset":66}],"location":"FeatureTest.LoginTest.the_user_attempts_to_log_in_with_username_and_password(java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"status":"passed"},"line":9,"name":"the system should authenticate the user successfully","match":{"location":"FeatureTest.LoginTest.the_system_should_authenticate_the_user_successfully()"},"keyword":"Then "},{"result":{"status":"passed"},"line":10,"name":"the user should have access to \"Customer\" functionalities","match":{"arguments":[{"val":"\"Customer\"","offset":31}],"location":"FeatureTest.LoginTest.the_user_should_have_access_to_functionalities(java.lang.String)"},"keyword":"And "}]},{"start_timestamp":"2025-05-17T11:18:11.476Z","line":12,"name":"Failed login with incorrect password","description":"","id":"user-login-and-authentication;failed-login-with-incorrect-password","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":13,"name":"a user with username \"john_doe\" and password \"Pass1234\" exists with role \"Customer\"","match":{"arguments":[{"val":"\"john_doe\"","offset":21},{"val":"\"Pass1234\"","offset":45},{"val":"\"Customer\"","offset":73}],"location":"FeatureTest.LoginTest.a_user_with_username_and_password_exists_with_role(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"status":"passed"},"line":14,"name":"the user attempts to log in with username \"john_doe\" and password \"WrongPass\"","match":{"arguments":[{"val":"\"john_doe\"","offset":42},{"val":"\"WrongPass\"","offset":66}],"location":"FeatureTest.LoginTest.the_user_attempts_to_log_in_with_username_and_password(java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"status":"passed"},"line":15,"name":"the system should deny access","match":{"location":"FeatureTest.LoginTest.the_system_should_deny_access()"},"keyword":"Then "},{"result":{"error_message":"org.junit.ComparisonFailure: Error message should match expected:<...username or password[]> but was:<...username or password[!]>\r\n\tat org.junit.Assert.assertEquals(Assert.java:117)\r\n\tat FeatureTest.LoginTest.the_user_should_receive_an_error_message(LoginTest.java:54)\r\n\tat ✽.the user should receive an error message \"Invalid username or password\"(file:///C:/Users/Nadia1/Downloads/Cook1/Cook1/Cook/src/test/resources/features/Login.feature:16)\r\n","duration":9992400,"status":"failed"},"line":16,"name":"the user should receive an error message \"Invalid username or password\"","match":{"arguments":[{"val":"\"Invalid username or password\"","offset":41}],"location":"FeatureTest.LoginTest.the_user_should_receive_an_error_message(java.lang.String)"},"keyword":"And "}]},{"start_timestamp":"2025-05-17T11:18:11.537Z","line":18,"name":"Failed login with non-existent username","description":"","id":"user-login-and-authentication;failed-login-with-non-existent-username","type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":9999400,"status":"passed"},"line":19,"name":"no user exists with username \"unknown_user\"","match":{"arguments":[{"val":"\"unknown_user\"","offset":29}],"location":"FeatureTest.LoginTest.no_user_exists_with_username(java.lang.String)"},"keyword":"Given "},{"result":{"status":"passed"},"line":20,"name":"the user attempts to log in with username \"unknown_user\" and password \"AnyPass\"","match":{"arguments":[{"val":"\"unknown_user\"","offset":42},{"val":"\"AnyPass\"","offset":70}],"location":"FeatureTest.LoginTest.the_user_attempts_to_log_in_with_username_and_password(java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"status":"passed"},"line":21,"name":"the system should deny access","match":{"location":"FeatureTest.LoginTest.the_system_should_deny_access()"},"keyword":"Then "},{"result":{"error_message":"org.junit.ComparisonFailure: Error message should match expected:<...username or password[]> but was:<...username or password[!]>\r\n\tat org.junit.Assert.assertEquals(Assert.java:117)\r\n\tat FeatureTest.LoginTest.the_user_should_receive_an_error_message(LoginTest.java:54)\r\n\tat ✽.the user should receive an error message \"Invalid username or password\"(file:///C:/Users/Nadia1/Downloads/Cook1/Cook1/Cook/src/test/resources/features/Login.feature:22)\r\n","status":"failed"},"line":22,"name":"the user should receive an error message \"Invalid username or password\"","match":{"arguments":[{"val":"\"Invalid username or password\"","offset":41}],"location":"FeatureTest.LoginTest.the_user_should_receive_an_error_message(java.lang.String)"},"keyword":"And "}]},{"start_timestamp":"2025-05-17T11:18:11.805Z","line":24,"name":"Role-based access after login","description":"","id":"user-login-and-authentication;role-based-access-after-login","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":25,"name":"a user with username \"chef_alice\" and password \"Chef1234\" exists with role \"Chef\"","match":{"arguments":[{"val":"\"chef_alice\"","offset":21},{"val":"\"Chef1234\"","offset":47},{"val":"\"Chef\"","offset":75}],"location":"FeatureTest.LoginTest.a_user_with_username_and_password_exists_with_role(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"status":"passed"},"line":26,"name":"the user attempts to log in with username \"chef_alice\" and password \"Chef1234\"","match":{"arguments":[{"val":"\"chef_alice\"","offset":42},{"val":"\"Chef1234\"","offset":68}],"location":"FeatureTest.LoginTest.the_user_attempts_to_log_in_with_username_and_password(java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"status":"passed"},"line":27,"name":"the system should authenticate the user successfully","match":{"location":"FeatureTest.LoginTest.the_system_should_authenticate_the_user_successfully()"},"keyword":"Then "},{"result":{"duration":9999100,"status":"passed"},"line":28,"name":"the user should have access to \"Chef\" functionalities","match":{"arguments":[{"val":"\"Chef\"","offset":31}],"location":"FeatureTest.LoginTest.the_user_should_have_access_to_functionalities(java.lang.String)"},"keyword":"And "}]}],"name":"User Login and Authentication","description":"  As a user (customer, chef, or admin),\n  I want to log in to the system with my credentials\n  So that I can access my respective functionalities securely.","id":"user-login-and-authentication","keyword":"Feature","uri":"file:src/test/resources/features/Login.feature","tags":[]},{"line":1,"elements":[{"line":11,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":10001700,"status":"passed"},"line":12,"name":"the following inventory levels:","match":{"location":"FeatureTest.SupplierIntegration.the_following_inventory_levels(io.cucumber.datatable.DataTable)"},"rows":[{"cells":["Ingredient","Quantity"]},{"cells":["Onions","10"]},{"cells":["Garlic","5"]},{"cells":["Tomatoes","50"]}],"keyword":"Given "},{"result":{"status":"passed"},"line":17,"name":"the following suppliers are available:","match":{"location":"FeatureTest.SupplierIntegration.the_following_suppliers_are_available(io.cucumber.datatable.DataTable)"},"rows":[{"cells":["Supplier","Ingredient","PricePerUnit"]},{"cells":["FreshFarms","Onions","0.50"]},{"cells":["FreshFarms","Garlic","0.30"]},{"cells":["FreshFarms","Tomatoes","0.80"]},{"cells":["GreenGrocers","Onions","0.45"]},{"cells":["GreenGrocers","Garlic","0.35"]},{"cells":["GreenGrocers","Tomatoes","0.75"]}],"keyword":"And "}]},{"start_timestamp":"2025-05-17T11:18:12.046Z","line":26,"name":"Fetch real-time prices for an ingredient","description":"","id":"supplier-integration-for-real-time-pricing-and-ordering;fetch-real-time-prices-for-an-ingredient","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":27,"name":"I request prices for \"Onions\" from all suppliers","match":{"arguments":[{"val":"\"Onions\"","offset":21}],"location":"FeatureTest.SupplierIntegration.i_request_prices_for_from_all_suppliers(java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.NullPointerException: Cannot invoke \"String.equals(Object)\" because the return value of \"java.util.Map.get(Object)\" is null\r\n\tat FeatureTest.SupplierIntegration.the_system_should_return_the_following_prices(SupplierIntegration.java:77)\r\n\tat ✽.the system should return the following prices:(file:///C:/Users/Nadia1/Downloads/Cook1/Cook1/Cook/src/test/resources/features/SupplierIntegration.feature:28)\r\n","status":"failed"},"line":28,"name":"the system should return the following prices:","match":{"location":"FeatureTest.SupplierIntegration.the_system_should_return_the_following_prices(io.cucumber.datatable.DataTable)"},"rows":[{"cells":["Supplier","Ingredient","PricePerUnit"]},{"cells":["FreshFarms","Onions","0.50"]},{"cells":["GreenGrocers","Onions","0.45"]}],"keyword":"Then "}]},{"line":11,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"status":"passed"},"line":12,"name":"the following inventory levels:","match":{"location":"FeatureTest.SupplierIntegration.the_following_inventory_levels(io.cucumber.datatable.DataTable)"},"rows":[{"cells":["Ingredient","Quantity"]},{"cells":["Onions","10"]},{"cells":["Garlic","5"]},{"cells":["Tomatoes","50"]}],"keyword":"Given "},{"result":{"status":"passed"},"line":17,"name":"the following suppliers are available:","match":{"location":"FeatureTest.SupplierIntegration.the_following_suppliers_are_available(io.cucumber.datatable.DataTable)"},"rows":[{"cells":["Supplier","Ingredient","PricePerUnit"]},{"cells":["FreshFarms","Onions","0.50"]},{"cells":["FreshFarms","Garlic","0.30"]},{"cells":["FreshFarms","Tomatoes","0.80"]},{"cells":["GreenGrocers","Onions","0.45"]},{"cells":["GreenGrocers","Garlic","0.35"]},{"cells":["GreenGrocers","Tomatoes","0.75"]}],"keyword":"And "}]},{"start_timestamp":"2025-05-17T11:18:12.086Z","line":33,"name":"Select the cheapest supplier for an ingredient","description":"","id":"supplier-integration-for-real-time-pricing-and-ordering;select-the-cheapest-supplier-for-an-ingredient","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":34,"name":"I request the cheapest supplier for \"Garlic\"","match":{"arguments":[{"val":"\"Garlic\"","offset":36}],"location":"FeatureTest.SupplierIntegration.i_request_the_cheapest_supplier_for(java.lang.String)"},"keyword":"When "},{"result":{"status":"passed"},"line":35,"name":"the system should select \"FreshFarms\" with price 0.30 for \"Garlic\"","match":{"arguments":[{"val":"\"FreshFarms\"","offset":25},{"val":"0.30","offset":49},{"val":"\"Garlic\"","offset":58}],"location":"FeatureTest.SupplierIntegration.the_system_should_select_with_price_for(java.lang.String,java.lang.Double,java.lang.String)"},"keyword":"Then "}]},{"line":11,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"status":"passed"},"line":12,"name":"the following inventory levels:","match":{"location":"FeatureTest.SupplierIntegration.the_following_inventory_levels(io.cucumber.datatable.DataTable)"},"rows":[{"cells":["Ingredient","Quantity"]},{"cells":["Onions","10"]},{"cells":["Garlic","5"]},{"cells":["Tomatoes","50"]}],"keyword":"Given "},{"result":{"status":"passed"},"line":17,"name":"the following suppliers are available:","match":{"location":"FeatureTest.SupplierIntegration.the_following_suppliers_are_available(io.cucumber.datatable.DataTable)"},"rows":[{"cells":["Supplier","Ingredient","PricePerUnit"]},{"cells":["FreshFarms","Onions","0.50"]},{"cells":["FreshFarms","Garlic","0.30"]},{"cells":["FreshFarms","Tomatoes","0.80"]},{"cells":["GreenGrocers","Onions","0.45"]},{"cells":["GreenGrocers","Garlic","0.35"]},{"cells":["GreenGrocers","Tomatoes","0.75"]}],"keyword":"And "}]},{"start_timestamp":"2025-05-17T11:18:12.106Z","line":37,"name":"Automatically generate purchase order and notify for critically low stock","description":"","id":"supplier-integration-for-real-time-pricing-and-ordering;automatically-generate-purchase-order-and-notify-for-critically-low-stock","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":38,"name":"the critical stock level is 5 units","match":{"arguments":[{"val":"5","offset":28}],"location":"FeatureTest.SupplierIntegration.the_critical_stock_level_is_units(java.lang.Integer)"},"keyword":"Given "},{"result":{"status":"passed"},"line":39,"name":"the system checks inventory levels","match":{"location":"FeatureTest.SupplierIntegration.the_system_checks_inventory_levels()"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: Purchase order should be generated\r\n\tat org.junit.Assert.fail(Assert.java:89)\r\n\tat org.junit.Assert.assertTrue(Assert.java:42)\r\n\tat org.junit.Assert.assertNotNull(Assert.java:713)\r\n\tat FeatureTest.SupplierIntegration.a_purchase_order_should_be_generated_for_with(SupplierIntegration.java:116)\r\n\tat ✽.a purchase order should be generated for \"Garlic\" with:(file:///C:/Users/Nadia1/Downloads/Cook1/Cook1/Cook/src/test/resources/features/SupplierIntegration.feature:40)\r\n","status":"failed"},"line":40,"name":"a purchase order should be generated for \"Garlic\" with:","match":{"arguments":[{"val":"\"Garlic\"","offset":41}],"location":"FeatureTest.SupplierIntegration.a_purchase_order_should_be_generated_for_with(java.lang.String,io.cucumber.datatable.DataTable)"},"rows":[{"cells":["Supplier","Ingredient","Quantity","PricePerUnit"]},{"cells":["FreshFarms","Garlic","50","0.30"]}],"keyword":"Then "},{"result":{"status":"skipped"},"line":43,"name":"the kitchen manager should receive a notification: \"Purchase order created for Garlic: 50 units from FreshFarms at $0.30 per unit\"","match":{"arguments":[{"val":"\"Purchase order created for Garlic: 50 units from FreshFarms at $0.30 per unit\"","offset":51}],"location":"FeatureTest.SupplierIntegration.the_kitchen_manager_should_receive_a_notification(java.lang.String)"},"keyword":"And "}]}],"name":"Supplier Integration for Real-Time Pricing and Ordering","description":"  As a kitchen manager,\n  I want the system to fetch real-time ingredient prices from suppliers\n  So that I can make cost-effective purchasing decisions.\n\n  As a system,\n  I want to automatically generate purchase orders when stock levels are critically low\n  So that supplies are replenished without manual intervention.","id":"supplier-integration-for-real-time-pricing-and-ordering","keyword":"Feature","uri":"file:src/test/resources/features/SupplierIntegration.feature","tags":[]},{"line":1,"elements":[{"line":11,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"status":"passed"},"line":12,"name":"the following chefs are available:","match":{"location":"FeatureTest.assign_tasks_to_chefs_and_kitchen_staff.the_following_chefs_are_available(io.cucumber.datatable.DataTable)"},"rows":[{"cells":["Name","Expertise","CurrentTasks"]},{"cells":["Alice","Italian","2"]},{"cells":["Bob","Grilling","1"]},{"cells":["Charlie","Baking","3"]}],"keyword":"Given "}]},{"start_timestamp":"2025-05-17T11:18:12.126Z","line":18,"name":"Assign task to chef with matching expertise and least workload","description":"","id":"scheduling-and-task-management;assign-task-to-chef-with-matching-expertise-and-least-workload","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":19,"name":"a new \"Italian Pasta\" task is created with required expertise \"Italian\"","match":{"arguments":[{"val":"\"Italian Pasta\"","offset":6},{"val":"\"Italian\"","offset":62}],"location":"FeatureTest.assign_tasks_to_chefs_and_kitchen_staff.a_new_task_is_created_with_required_expertise(java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"status":"passed"},"line":20,"name":"the task should be assigned to \"Alice\"","match":{"arguments":[{"val":"\"Alice\"","offset":31}],"location":"FeatureTest.assign_tasks_to_chefs_and_kitchen_staff.the_task_should_be_assigned_to(java.lang.String)"},"keyword":"Then "},{"result":{"status":"passed"},"line":21,"name":"Alice's task count should increase by 1","match":{"arguments":[{"val":"1","offset":38}],"location":"FeatureTest.assign_tasks_to_chefs_and_kitchen_staff.alice_s_task_count_should_increase_by(int)"},"keyword":"And "}]},{"line":11,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"status":"passed"},"line":12,"name":"the following chefs are available:","match":{"location":"FeatureTest.assign_tasks_to_chefs_and_kitchen_staff.the_following_chefs_are_available(io.cucumber.datatable.DataTable)"},"rows":[{"cells":["Name","Expertise","CurrentTasks"]},{"cells":["Alice","Italian","2"]},{"cells":["Bob","Grilling","1"]},{"cells":["Charlie","Baking","3"]}],"keyword":"Given "}]},{"start_timestamp":"2025-05-17T11:18:12.156Z","line":23,"name":"Assign task to chef with least workload when no expertise match","description":"","id":"scheduling-and-task-management;assign-task-to-chef-with-least-workload-when-no-expertise-match","type":"scenario","keyword":"Scenario","steps":[{"result":{"error_message":"org.opentest4j.AssertionFailedError: Task should be assigned to a chef with matching expertise ==> expected: <true> but was: <false>\r\n\tat org.junit.jupiter.api.AssertionFailureBuilder.build(AssertionFailureBuilder.java:151)\r\n\tat org.junit.jupiter.api.AssertionFailureBuilder.buildAndThrow(AssertionFailureBuilder.java:132)\r\n\tat org.junit.jupiter.api.AssertTrue.failNotTrue(AssertTrue.java:63)\r\n\tat org.junit.jupiter.api.AssertTrue.assertTrue(AssertTrue.java:36)\r\n\tat org.junit.jupiter.api.Assertions.assertTrue(Assertions.java:214)\r\n\tat FeatureTest.assign_tasks_to_chefs_and_kitchen_staff.a_new_task_is_created_with_required_expertise(assign_tasks_to_chefs_and_kitchen_staff.java:54)\r\n\tat ✽.a new \"Vegan Salad\" task is created with required expertise \"Vegan\"(file:///C:/Users/Nadia1/Downloads/Cook1/Cook1/Cook/src/test/resources/features/assign_tasks_to_chefs_and_kitchen_staff.feature:24)\r\n","status":"failed"},"line":24,"name":"a new \"Vegan Salad\" task is created with required expertise \"Vegan\"","match":{"arguments":[{"val":"\"Vegan Salad\"","offset":6},{"val":"\"Vegan\"","offset":60}],"location":"FeatureTest.assign_tasks_to_chefs_and_kitchen_staff.a_new_task_is_created_with_required_expertise(java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"status":"skipped"},"line":25,"name":"the task should be assigned to \"Bob\"","match":{"arguments":[{"val":"\"Bob\"","offset":31}],"location":"FeatureTest.assign_tasks_to_chefs_and_kitchen_staff.the_task_should_be_assigned_to(java.lang.String)"},"keyword":"Then "},{"result":{"status":"skipped"},"line":26,"name":"Bob's task count should increase by 1","match":{"arguments":[{"val":"1","offset":36}],"location":"FeatureTest.assign_tasks_to_chefs_and_kitchen_staff.bob_s_task_count_should_increase_by(int)"},"keyword":"And "}]},{"line":11,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"status":"passed"},"line":12,"name":"the following chefs are available:","match":{"location":"FeatureTest.assign_tasks_to_chefs_and_kitchen_staff.the_following_chefs_are_available(io.cucumber.datatable.DataTable)"},"rows":[{"cells":["Name","Expertise","CurrentTasks"]},{"cells":["Alice","Italian","2"]},{"cells":["Bob","Grilling","1"]},{"cells":["Charlie","Baking","3"]}],"keyword":"Given "}]},{"start_timestamp":"2025-05-17T11:18:12.186Z","line":28,"name":"Chef receives a notification for a new task","description":"","id":"scheduling-and-task-management;chef-receives-a-notification-for-a-new-task","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":29,"name":"a new \"Grilled Chicken\" task is assigned to \"Bob\"","match":{"arguments":[{"val":"\"Grilled Chicken\"","offset":6},{"val":"\"Bob\"","offset":44}],"location":"FeatureTest.assign_tasks_to_chefs_and_kitchen_staff.a_new_task_is_assigned_to(java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.NullPointerException: Cannot invoke \"production_code.kitchen_manager_features.Task.getName()\" because \"this.lastAssignedTask\" is null\r\n\tat FeatureTest.assign_tasks_to_chefs_and_kitchen_staff.bob_should_receive_a_notification(assign_tasks_to_chefs_and_kitchen_staff.java:100)\r\n\tat ✽.Bob should receive a notification: \"You have been assigned a new task: Grilled Chicken\"(file:///C:/Users/Nadia1/Downloads/Cook1/Cook1/Cook/src/test/resources/features/assign_tasks_to_chefs_and_kitchen_staff.feature:30)\r\n","status":"failed"},"line":30,"name":"Bob should receive a notification: \"You have been assigned a new task: Grilled Chicken\"","match":{"arguments":[{"val":"\"You have been assigned a new task: Grilled Chicken\"","offset":35}],"location":"FeatureTest.assign_tasks_to_chefs_and_kitchen_staff.bob_should_receive_a_notification(java.lang.String)"},"keyword":"Then "}]}],"name":"Scheduling and Task Management","description":"  As a kitchen manager,\n  I want to assign tasks to chefs based on their workload and expertise\n  So that I can ensure balanced workloads and efficiency.\n\n  As a chef,\n  I want to receive notifications about my assigned cooking tasks\n  So that I can prepare meals on time.","id":"scheduling-and-task-management","keyword":"Feature","uri":"file:src/test/resources/features/assign_tasks_to_chefs_and_kitchen_staff.feature","tags":[]},{"line":1,"elements":[{"start_timestamp":"2025-05-17T11:18:12.216Z","line":6,"name":"Low stock ingredients alert","description":"","id":"low-stock-notifications;low-stock-ingredients-alert","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":7,"name":"the inventory has the following ingredients:","match":{"location":"FeatureTest.notify_users_of_low_stock_ingredients.theInventoryHasTheFollowingIngredients(io.cucumber.datatable.DataTable)"},"rows":[{"cells":["ingredient","quantity"]},{"cells":["Onions","15"]},{"cells":["Garlic","2"]},{"cells":["Tomatoes","100"]}],"keyword":"Given "},{"result":{"status":"passed"},"line":12,"name":"the critical stock level is 15","match":{"arguments":[{"val":"15","offset":28}],"location":"FeatureTest.notify_users_of_low_stock_ingredients.theCriticalStockLevelIs(int)"},"keyword":"And "},{"result":{"status":"passed"},"line":13,"name":"the system checks for low stock ingredients","match":{"location":"FeatureTest.notify_users_of_low_stock_ingredients.theSystemChecksForLowStockIngredients()"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: Alert should contain low stock ingredient: - Onions (15 units)\r\n\tat org.junit.Assert.fail(Assert.java:89)\r\n\tat org.junit.Assert.assertTrue(Assert.java:42)\r\n\tat FeatureTest.notify_users_of_low_stock_ingredients.theKitchenManagerShouldReceiveAnAlertForTheFollowingLowStockIngredients(notify_users_of_low_stock_ingredients.java:54)\r\n\tat ✽.the kitchen manager should receive an alert for the following low stock ingredients:(file:///C:/Users/Nadia1/Downloads/Cook1/Cook1/Cook/src/test/resources/features/notify_users_of_low_stock_ingredients.feature:14)\r\n","duration":10000400,"status":"failed"},"line":14,"name":"the kitchen manager should receive an alert for the following low stock ingredients:","match":{"location":"FeatureTest.notify_users_of_low_stock_ingredients.theKitchenManagerShouldReceiveAnAlertForTheFollowingLowStockIngredients(io.cucumber.datatable.DataTable)"},"rows":[{"cells":["Onions"]},{"cells":["Garlic"]}],"keyword":"Then "}]},{"start_timestamp":"2025-05-17T11:18:12.246Z","line":18,"name":"No notification when all ingredients are above critical stock level","description":"","id":"low-stock-notifications;no-notification-when-all-ingredients-are-above-critical-stock-level","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":19,"name":"the inventory has the following ingredients:","match":{"location":"FeatureTest.notify_users_of_low_stock_ingredients.theInventoryHasTheFollowingIngredients(io.cucumber.datatable.DataTable)"},"rows":[{"cells":["ingredient","quantity"]},{"cells":["Tomato","10"]},{"cells":["Lettuce","15"]},{"cells":["Onion","8"]}],"keyword":"Given "},{"result":{"status":"passed"},"line":24,"name":"the critical stock level is 5","match":{"arguments":[{"val":"5","offset":28}],"location":"FeatureTest.notify_users_of_low_stock_ingredients.theCriticalStockLevelIs(int)"},"keyword":"And "},{"result":{"status":"passed"},"line":25,"name":"the system checks for low stock ingredients","match":{"location":"FeatureTest.notify_users_of_low_stock_ingredients.theSystemChecksForLowStockIngredients()"},"keyword":"When "},{"result":{"status":"passed"},"line":26,"name":"the kitchen manager should receive no low stock alerts","match":{"location":"FeatureTest.notify_users_of_low_stock_ingredients.theKitchenManagerShouldReceiveNoLowStockAlerts()"},"keyword":"Then "}]}],"name":"Low Stock Notifications","description":"  As a kitchen manager\n  I want to be notified when ingredients are low in stock\n  So that I can restock them before they run out","id":"low-stock-notifications","keyword":"Feature","uri":"file:src/test/resources/features/notify_users_of_low_stock_ingredients.feature","tags":[]},{"line":1,"elements":[{"start_timestamp":"2025-05-17T11:18:12.266Z","line":5,"name":"Customer receives a delivery reminder","description":"","id":"notifications-and-alerts-as-a-customer-;customer-receives-a-delivery-reminder","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":6,"name":"a customer has an upcoming meal delivery","match":{"location":"FeatureTest.send_reminders_for_upcoming_orders_and_deliveries.a_customer_has_an_upcoming_meal_delivery()"},"keyword":"Given "},{"result":{"status":"passed"},"line":7,"name":"the system sends a delivery reminder","match":{"location":"FeatureTest.send_reminders_for_upcoming_orders_and_deliveries.the_system_sends_a_delivery_reminder()"},"keyword":"When "},{"result":{"status":"undefined"},"line":8,"name":"the customer receives a reminder with delivery details","match":{},"keyword":"Then "}]},{"start_timestamp":"2025-05-17T11:18:12.276Z","line":10,"name":"Customer receives a message when delivery time is not set","description":"","id":"notifications-and-alerts-as-a-customer-;customer-receives-a-message-when-delivery-time-is-not-set","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"undefined"},"line":11,"name":"a customer has an order without a delivery time","match":{},"keyword":"Given "},{"result":{"status":"skipped"},"line":12,"name":"the system sends a delivery reminder","match":{"location":"FeatureTest.send_reminders_for_upcoming_orders_and_deliveries.the_system_sends_a_delivery_reminder()"},"keyword":"When "},{"result":{"status":"skipped"},"line":13,"name":"the customer receives a message indicating no delivery time is scheduled","match":{},"keyword":"Then "}]},{"start_timestamp":"2025-05-17T11:18:12.296Z","line":15,"name":"Chef receives a task notification","description":"","id":"notifications-and-alerts-as-a-customer-;chef-receives-a-task-notification","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":16,"name":"a chef is assigned a cooking task","match":{"location":"FeatureTest.send_reminders_for_upcoming_orders_and_deliveries.a_chef_is_assigned_a_cooking_task()"},"keyword":"Given "},{"result":{"status":"undefined"},"line":17,"name":"the system sends a task notification","match":{},"keyword":"When "},{"result":{"status":"skipped"},"line":18,"name":"the chef receives a notification with task details","match":{},"keyword":"Then "}]}],"name":"Notifications and Alerts As a customer,","description":"  I want to receive reminders for my upcoming meal deliveries so that I can be prepared to receive them.\n  As a chef, I want to get notified of scheduled cooking tasks so that I can prepare meals on time.","id":"notifications-and-alerts-as-a-customer-","keyword":"Feature","uri":"file:src/test/resources/features/send_reminders_for_upcoming_orders_and_deliveries.feature","tags":[]},{"line":1,"elements":[{"start_timestamp":"2025-05-17T11:18:12.316Z","line":6,"name":"Customer enters dietary preferences and allergies","description":"","id":"store-dietary-preferences-and-allergies;customer-enters-dietary-preferences-and-allergies","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":7,"name":"a customer named \"Aria\"","match":{"arguments":[{"val":"\"Aria\"","offset":17}],"location":"FeatureTest.StoreDietaryPreferencesAndAllergieTest.a_customer_named(java.lang.String)"},"keyword":"Given "},{"result":{"status":"passed"},"line":8,"name":"they input dietary preference as \"Vegan\"","match":{"arguments":[{"val":"\"Vegan\"","offset":33}],"location":"FeatureTest.StoreDietaryPreferencesAndAllergieTest.they_input_dietary_preference_as(java.lang.String)"},"keyword":"When "},{"result":{"status":"passed"},"line":9,"name":"they input allergy to \"Gluten\"","match":{"arguments":[{"val":"\"Gluten\"","offset":22}],"location":"FeatureTest.StoreDietaryPreferencesAndAllergieTest.they_input_allergy_to(java.lang.String)"},"keyword":"And "},{"result":{"duration":10001500,"status":"passed"},"line":10,"name":"the system should store their preferences and allergies","match":{"location":"FeatureTest.StoreDietaryPreferencesAndAllergieTest.the_system_should_store_their_preferences_and_allergies()"},"keyword":"Then "}]},{"start_timestamp":"2025-05-17T11:18:12.346Z","line":12,"name":"System recommends meals based on stored dietary data","description":"","id":"store-dietary-preferences-and-allergies;system-recommends-meals-based-on-stored-dietary-data","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":13,"name":"a customer named \"Aria\" with a dietary preference \"Vegan\" and allergy to \"Gluten\"","match":{"arguments":[{"val":"\"Aria\"","offset":17},{"val":"\"Vegan\"","offset":50},{"val":"\"Gluten\"","offset":73}],"location":"FeatureTest.StoreDietaryPreferencesAndAllergieTest.a_customer_named_with_a_dietary_preference_and_allergy_to(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"status":"passed"},"line":14,"name":"the system suggests meals","match":{"location":"FeatureTest.StoreDietaryPreferencesAndAllergieTest.the_system_suggests_meals()"},"keyword":"When "},{"result":{"status":"passed"},"line":15,"name":"all suggested meals should match the dietary preference \"Vegan\"","match":{"arguments":[{"val":"\"Vegan\"","offset":56}],"location":"FeatureTest.StoreDietaryPreferencesAndAllergieTest.all_suggested_meals_should_match_the_dietary_preference(java.lang.String)"},"keyword":"Then "},{"result":{"status":"passed"},"line":16,"name":"should not contain \"Gluten\"","match":{"arguments":[{"val":"\"Gluten\"","offset":19}],"location":"FeatureTest.StoreDietaryPreferencesAndAllergieTest.should_not_contain(java.lang.String)"},"keyword":"And "}]},{"start_timestamp":"2025-05-17T11:18:12.366Z","line":19,"name":"Chef views customer dietary preferences","description":"","id":"store-dietary-preferences-and-allergies;chef-views-customer-dietary-preferences","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":20,"name":"a customer named \"Aria\" with a dietary preference \"Vegan\" and allergy to \"Peanut\"","match":{"arguments":[{"val":"\"Aria\"","offset":17},{"val":"\"Vegan\"","offset":50},{"val":"\"Peanut\"","offset":73}],"location":"FeatureTest.StoreDietaryPreferencesAndAllergieTest.a_customer_named_with_a_dietary_preference_and_allergy_to(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"status":"passed"},"line":21,"name":"the chef views Aria's dietary profile","match":{"location":"FeatureTest.StoreDietaryPreferencesAndAllergieTest.the_chef_views_aria_s_dietary_profile()"},"keyword":"When "},{"result":{"status":"passed"},"line":22,"name":"they should see \"Vegan\" as the dietary preference","match":{"arguments":[{"val":"\"Vegan\"","offset":16}],"location":"FeatureTest.StoreDietaryPreferencesAndAllergieTest.they_should_see_as_the_dietary_preference(java.lang.String)"},"keyword":"Then "},{"result":{"status":"passed"},"line":23,"name":"\"Peanut\" listed under allergies","match":{"arguments":[{"val":"\"Peanut\"","offset":0}],"location":"FeatureTest.StoreDietaryPreferencesAndAllergieTest.listed_under_allergies(java.lang.String)"},"keyword":"And "}]}],"name":"Store dietary preferences and allergies","description":"    As a customer, I want to input my dietary preferences and allergies\n    so that the system can recommend appropriate meals and prevent unwanted ingredients.\n    As a chef, I want to view customer dietary preferences so that I can customize meals accordingly.","id":"store-dietary-preferences-and-allergies","keyword":"Feature","uri":"file:src/test/resources/features/store_dietary_preferences_and_allergie.feature","tags":[]},{"line":1,"elements":[{"start_timestamp":"2025-05-17T11:18:12.406Z","line":3,"name":"Substitute unavailable ingredient with available alternative","description":"","id":"substitution;substitute-unavailable-ingredient-with-available-alternative","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":4,"name":"a customer with dietary preference \"Vegan\" and allergy \"Peanut\"","match":{"arguments":[{"val":"\"Vegan\"","offset":35},{"val":"\"Peanut\"","offset":55}],"location":"FeatureTest.CustomerOrder.aCustomerWithDietaryPreferenceAndAllergy(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"status":"passed"},"line":5,"name":"the following ingredients are available:","match":{"location":"FeatureTest.CustomerOrder.theFollowingIngredientsAreAvailable(io.cucumber.datatable.DataTable)"},"rows":[{"cells":["name","available"]},{"cells":["Lettuce","true"]},{"cells":["Tomato","true"]},{"cells":["Chicken","false"]},{"cells":["Tofu","true"]}],"keyword":"And "},{"result":{"status":"passed"},"line":11,"name":"the customer selects the following ingredients for their custom meal:","match":{"location":"FeatureTest.CustomerOrder.theCustomerSelectsTheFollowingIngredientsForTheirCustomMeal(io.cucumber.datatable.DataTable)"},"rows":[{"cells":["ingredient"]},{"cells":["Lettuce"]},{"cells":["Tomato"]},{"cells":["Chicken"]}],"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: Expected notification for unavailable ingredient: Chicken is currently unavailable.\r\n\tat org.junit.Assert.fail(Assert.java:89)\r\n\tat org.junit.Assert.assertTrue(Assert.java:42)\r\n\tat FeatureTest.CustomerOrder.theSystemShouldNotifyTheCustomerThatIsCurrentlyUnavailable(CustomerOrder.java:91)\r\n\tat ✽.the system should notify the customer that \"Chicken\" is currently unavailable(file:///C:/Users/Nadia1/Downloads/Cook1/Cook1/Cook/src/test/resources/features/suggest_ingredient_substitutions_based_on_dietary_restrictions.feature:16)\r\n","status":"failed"},"line":16,"name":"the system should notify the customer that \"Chicken\" is currently unavailable","match":{"arguments":[{"val":"\"Chicken\"","offset":43}],"location":"FeatureTest.CustomerOrder.theSystemShouldNotifyTheCustomerThatIsCurrentlyUnavailable(java.lang.String)"},"keyword":"Then "},{"result":{"status":"skipped"},"line":17,"name":"the customer should be asked to choose a different ingredient","match":{"location":"FeatureTest.CustomerOrder.theCustomerShouldBeAskedToChooseADifferentIngredient()"},"keyword":"And "}]},{"start_timestamp":"2025-05-17T11:18:12.446Z","line":19,"name":"No substitution available for unavailable ingredient","description":"","id":"substitution;no-substitution-available-for-unavailable-ingredient","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":20,"name":"a customer with dietary preference \"Vegan\" and allergy \"Peanut\"","match":{"arguments":[{"val":"\"Vegan\"","offset":35},{"val":"\"Peanut\"","offset":55}],"location":"FeatureTest.CustomerOrder.aCustomerWithDietaryPreferenceAndAllergy(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"status":"passed"},"line":21,"name":"the following ingredients are available:","match":{"location":"FeatureTest.CustomerOrder.theFollowingIngredientsAreAvailable(io.cucumber.datatable.DataTable)"},"rows":[{"cells":["name","available"]},{"cells":["Lettuce","true"]},{"cells":["Tomato","true"]},{"cells":["Chicken","false"]}],"keyword":"And "},{"result":{"status":"passed"},"line":26,"name":"the customer selects the following ingredients for their custom meal:","match":{"location":"FeatureTest.CustomerOrder.theCustomerSelectsTheFollowingIngredientsForTheirCustomMeal(io.cucumber.datatable.DataTable)"},"rows":[{"cells":["ingredient"]},{"cells":["Lettuce"]},{"cells":["Tomato"]},{"cells":["Chicken"]}],"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: Expected notification for unavailable ingredient: Chicken is currently unavailable.\r\n\tat org.junit.Assert.fail(Assert.java:89)\r\n\tat org.junit.Assert.assertTrue(Assert.java:42)\r\n\tat FeatureTest.CustomerOrder.theSystemShouldNotifyTheCustomerThatIsCurrentlyUnavailable(CustomerOrder.java:91)\r\n\tat ✽.the system should notify the customer that \"Chicken\" is currently unavailable(file:///C:/Users/Nadia1/Downloads/Cook1/Cook1/Cook/src/test/resources/features/suggest_ingredient_substitutions_based_on_dietary_restrictions.feature:31)\r\n","status":"failed"},"line":31,"name":"the system should notify the customer that \"Chicken\" is currently unavailable","match":{"arguments":[{"val":"\"Chicken\"","offset":43}],"location":"FeatureTest.CustomerOrder.theSystemShouldNotifyTheCustomerThatIsCurrentlyUnavailable(java.lang.String)"},"keyword":"Then "},{"result":{"status":"skipped"},"line":32,"name":"the customer should be asked to choose a different ingredient","match":{"location":"FeatureTest.CustomerOrder.theCustomerShouldBeAskedToChooseADifferentIngredient()"},"keyword":"And "}]},{"start_timestamp":"2025-05-17T11:18:12.476Z","line":34,"name":"Substitute incompatible ingredient with compatible alternative","description":"","id":"substitution;substitute-incompatible-ingredient-with-compatible-alternative","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":35,"name":"a customer with dietary preference \"Vegan\" and allergy \"Peanut\"","match":{"arguments":[{"val":"\"Vegan\"","offset":35},{"val":"\"Peanut\"","offset":55}],"location":"FeatureTest.CustomerOrder.aCustomerWithDietaryPreferenceAndAllergy(java.lang.String,java.lang.String)"},"keyword":"Given "},{"result":{"duration":9994800,"status":"passed"},"line":36,"name":"the following ingredients are available:","match":{"location":"FeatureTest.CustomerOrder.theFollowingIngredientsAreAvailable(io.cucumber.datatable.DataTable)"},"rows":[{"cells":["name","available"]},{"cells":["Lettuce","true"]},{"cells":["Tomato","true"]},{"cells":["Cheese","true"]},{"cells":["Tofu","true"]}],"keyword":"And "},{"result":{"status":"passed"},"line":42,"name":"the customer selects the following ingredients for their custom meal:","match":{"location":"FeatureTest.CustomerOrder.theCustomerSelectsTheFollowingIngredientsForTheirCustomMeal(io.cucumber.datatable.DataTable)"},"rows":[{"cells":["ingredient"]},{"cells":["Lettuce"]},{"cells":["Tomato"]},{"cells":["Cheese"]}],"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: Expected alert for incompatible ingredient: Cheese is not compatible with your dietary preference.\r\n\tat org.junit.Assert.fail(Assert.java:89)\r\n\tat org.junit.Assert.assertTrue(Assert.java:42)\r\n\tat FeatureTest.CustomerOrder.theSystemShouldAlertTheCustomerThatIsNotCompatibleWithTheirDietaryPreference(CustomerOrder.java:79)\r\n\tat ✽.the system should alert the customer that \"Cheese\" is not compatible with their dietary preference(file:///C:/Users/Nadia1/Downloads/Cook1/Cook1/Cook/src/test/resources/features/suggest_ingredient_substitutions_based_on_dietary_restrictions.feature:47)\r\n","status":"failed"},"line":47,"name":"the system should alert the customer that \"Cheese\" is not compatible with their dietary preference","match":{"arguments":[{"val":"\"Cheese\"","offset":42}],"location":"FeatureTest.CustomerOrder.theSystemShouldAlertTheCustomerThatIsNotCompatibleWithTheirDietaryPreference(java.lang.String)"},"keyword":"Then "},{"result":{"status":"skipped"},"line":48,"name":"the customer should be prompted to select a different ingredient","match":{"location":"FeatureTest.CustomerOrder.theCustomerShouldBePromptedToSelectADifferentIngredient()"},"keyword":"And "}]}],"name":"Substitution","description":"","id":"substitution","keyword":"Feature","uri":"file:src/test/resources/features/suggest_ingredient_substitutions_based_on_dietary_restrictions.feature","tags":[]},{"line":1,"elements":[{"start_timestamp":"2025-05-17T11:18:12.496Z","line":3,"name":"Customer views past meal orders","description":"","id":"track-past-orders-and-personalized-meal-plans;customer-views-past-meal-orders","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":4,"name":"I am a registered customer","match":{"location":"FeatureTest.TrackPastOrdersAndPersonalizedMealPlansTest.i_am_a_registered_customer()"},"keyword":"Given "},{"result":{"status":"passed"},"line":5,"name":"I have previously ordered meals","match":{"location":"FeatureTest.TrackPastOrdersAndPersonalizedMealPlansTest.i_have_previously_ordered_meals()"},"keyword":"And "},{"result":{"status":"passed"},"line":6,"name":"I view my past orders","match":{"location":"FeatureTest.TrackPastOrdersAndPersonalizedMealPlansTest.i_view_my_past_orders()"},"keyword":"When "},{"result":{"status":"passed"},"line":7,"name":"I should see a list of meals I previously ordered","match":{"location":"FeatureTest.TrackPastOrdersAndPersonalizedMealPlansTest.i_should_see_a_list_of_meals_i_previously_ordered()"},"keyword":"Then "},{"result":{"status":"passed"},"line":8,"name":"I should be able to reorder any of them","match":{"location":"FeatureTest.TrackPastOrdersAndPersonalizedMealPlansTest.i_should_be_able_to_reorder_any_of_them()"},"keyword":"And "}]},{"start_timestamp":"2025-05-17T11:18:12.527Z","line":10,"name":"Chef suggests personalized meals based on order history","description":"","id":"track-past-orders-and-personalized-meal-plans;chef-suggests-personalized-meals-based-on-order-history","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":11,"name":"I am a chef and I have access to customer order history","match":{"location":"FeatureTest.TrackPastOrdersAndPersonalizedMealPlansTest.i_am_a_chef_and_i_have_access_to_customer_order_history()"},"keyword":"Given "},{"result":{"status":"passed"},"line":12,"name":"the customer has previously ordered Vegan meals","match":{"location":"FeatureTest.TrackPastOrdersAndPersonalizedMealPlansTest.the_customer_has_previously_ordered_vegan_meals()"},"keyword":"And "},{"result":{"status":"passed"},"line":13,"name":"I analyze their past orders","match":{"location":"FeatureTest.TrackPastOrdersAndPersonalizedMealPlansTest.i_analyze_their_past_orders()"},"keyword":"When "},{"result":{"status":"passed"},"line":14,"name":"I should be able to suggest personalized Vegan meals for the customer","match":{"location":"FeatureTest.TrackPastOrdersAndPersonalizedMealPlansTest.i_should_be_able_to_suggest_personalized_vegan_meals_for_the_customer()"},"keyword":"Then "}]},{"start_timestamp":"2025-05-17T11:18:12.557Z","line":16,"name":"System administrator stores and retrieves customer order history","description":"","id":"track-past-orders-and-personalized-meal-plans;system-administrator-stores-and-retrieves-customer-order-history","type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":17,"name":"I am a system administrator","match":{"location":"FeatureTest.TrackPastOrdersAndPersonalizedMealPlansTest.i_am_a_system_administrator()"},"keyword":"Given "},{"result":{"status":"passed"},"line":18,"name":"customer order history exists in the database","match":{"location":"FeatureTest.TrackPastOrdersAndPersonalizedMealPlansTest.customer_order_history_exists_in_the_database()"},"keyword":"And "},{"result":{"status":"passed"},"line":19,"name":"I retrieve the order history for a customer","match":{"location":"FeatureTest.TrackPastOrdersAndPersonalizedMealPlansTest.i_retrieve_the_order_history_for_a_customer()"},"keyword":"When "},{"result":{"status":"passed"},"line":20,"name":"I should see a complete and accurate list of their past meal orders","match":{"location":"FeatureTest.TrackPastOrdersAndPersonalizedMealPlansTest.i_should_see_a_complete_and_accurate_list_of_their_past_meal_orders()"},"keyword":"Then "},{"result":{"error_message":"java.lang.AssertionError\r\n\tat org.junit.Assert.fail(Assert.java:87)\r\n\tat org.junit.Assert.assertTrue(Assert.java:42)\r\n\tat org.junit.Assert.assertTrue(Assert.java:53)\r\n\tat FeatureTest.TrackPastOrdersAndPersonalizedMealPlansTest.i_should_be_able_to_generate_reports_on_order_trends(TrackPastOrdersAndPersonalizedMealPlansTest.java:105)\r\n\tat ✽.I should be able to generate reports on order trends(file:///C:/Users/Nadia1/Downloads/Cook1/Cook1/Cook/src/test/resources/features/track_past_orders_and_personalized_meal_plans.feature:21)\r\n","status":"failed"},"line":21,"name":"I should be able to generate reports on order trends","match":{"location":"FeatureTest.TrackPastOrdersAndPersonalizedMealPlansTest.i_should_be_able_to_generate_reports_on_order_trends()"},"keyword":"And "}]}],"name":"Track past orders and personalized meal plans","description":"","id":"track-past-orders-and-personalized-meal-plans","keyword":"Feature","uri":"file:src/test/resources/features/track_past_orders_and_personalized_meal_plans.feature","tags":[]}]